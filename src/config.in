#
# Bearwall configuration file
#
# This file is used to configure the behaviour of bearwall, firewall rules
# are configured in @CONFDIR@/interfaces.d and @CONFDIR@/classes.d
#

#
# Logging
#
# Where should firewall rule matches be logged to?
#
# Values:
#    - syslog
#        Logs end up in /var/log/syslog, the downside of syslog is
#        that dmesg gets polluted with rule matches
#    - nflog
#        Packets that match firewall rules will be passed to the userspace
#        daemon ulogd2 which will then log packets to the log file configured
#        in /etc/ulogd.conf (/var/log/ulog/syslogemu.log by default)
#    - none
#        Don't log matched packets
#
# Default: logging=none
logging=none

#
# Connection tracking
#
# Should bearwall act as a stateful or stateless firewall with packets being
# forwarded through the firewall.
#
# Note: Packets being dealt with on the local host (INPUT and OUTPUT) must
# be statefully tracked even in a stateless configuration
#
# Values:
#    - stateful
#        All packets are processed by conntrack enabling full stateful firewall
#        features like 'ct' matching on forward rules, dnat, snat and masquerade.
#    - local
#        bearwall inspects the routing table for all local routes on load
#        and statically enables connection tracking for these routes only. This
#        means that packets forwarded through the machine skip conntrack and
#        no stateful matches are possible in forward. Stateful firewall features
#        are only available on in, out, and inout targets.
#        Note: Does play well with IPv6 privacy addresses and other
#        dynamic addresses.
#    - stateless
#        Conntrack is disabled for all packets. No stateful firewall features
#        are available at all.
#
# Default: conntrack=stateful
conntrack=stateful

#
# Missing interfaces
#
# What should bearwall do when it comes across an interface that it has a
# firewall definition for, but the interface does not exist on the host.
#
# By default bearwall uses an interface matching mode where nftables matches all
# interface names to ifIndex and interfaces are matched by nftable at run time
# using the inIndex only. This is a much faster way of operating, but results
# in nftable errors on load if the interface does not exist. Bearwall can
# help deal with this by a few methods
#
# Values:
#    - ifname
#        Always use ifname rather ifIndex (Warning SLOW)
#    - lazy
#        Fallback to ifname if interface does not exist (Warning potentially
#        slow on high throughput routers)
#    - withhold
#        Don't configure rules for the interface if it does not exist
#    - error
#        Error out on rule generation if interface does not exist
#    - ignore
#        Don't detect case (Most likely nftables will fail to load)
#
# Default missing=lazy
missing=lazy

#
# Transient interfaces
#
# List of interfaces that should always be created and referenced by ifname
# instead of ifindex, irrespective of what the missing interface configuration
# option is set to.
#
# Useful for interfaces such as ppp which might not exist when bearwall starts
# and keep the same ifname but renumber their ifindex when the tunnel reconnects.
#
# Values:
#    - comma-separated list of interface types
#      (which are string matched against the start of an interface name)
#
# Default always_ifname="ppp"
always_ifname="ppp"

#
# Rollback delay
#
# The number of seconds bearwall should wait before automatically rolling back
# firewall policy after the try command has been run.
#
# Note: This value can be overridden by supplying a different delay time as an
# argument to the try command.
#
# Values:
#    - delay in seconds
#
# Default rollback_delay=30
rollback_delay=30

#
# Fallback policy
#
# Be default bearwall will set the default policy when there is no matching
# rules to drop. In some cases you may want to change this behaviour
# (for example to only firewall particular interfaces).
#
# Values:
#    - accept
#        Packets that don't match a rule will be accepted
#    - drop
#        Packets that don't match a rule will be dropped
#
# Default default_policy_filter="drop"
# Default default_policy_forward="drop"
default_policy_filter="drop"
default_policy_forward="drop"
